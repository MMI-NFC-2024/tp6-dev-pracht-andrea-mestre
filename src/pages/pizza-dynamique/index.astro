---
import Layout from "../../layouts/Layout.astro";
import pizza from "../../assets/pizza.json";
export const prerender = false;
const categories = [...new Set(pizza.map((p) => p.category))].sort();
---

<Layout>
  <div class="max-w-4xl mx-auto px-4 py-8">
    <div class="mb-6 bg-orange-50 border-l-4 border-orange-500 p-4 rounded">
      <p class="text-orange-800 font-semibold">
        ‚ö° Version Dynamique (SSR) - Pages g√©n√©r√©es √† chaque requ√™te avec prerender = false
      </p>
    </div>

    <h1 class="text-4xl font-bold mb-4 text-gray-900">
      Explorer les cat√©gories de pizzas (Rendu Dynamique)
    </h1>
    <p class="text-lg text-gray-600 mb-8">
      Cliquez sur une cat√©gorie pour voir ses statistiques et graphiques d√©taill√©s
    </p>

  
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      {categories.map((c) => {
        const categoryCount = pizza.filter((p) => p.category === c).length;
        const totalRevenue = pizza
          .filter((p) => p.category === c)
          .reduce((sum, p) => sum + p.revenue, 0);
        return (
          <a
            href={`/pizza-dynamique/${c}`}
            class="block bg-white rounded-lg shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 p-6 border-2 border-orange-200 hover:border-orange-400"
          >
            <div class="flex items-center justify-between mb-3">
              <h2 class="text-2xl font-bold text-gray-800">{c}</h2>
              <span class="text-4xl">üçï</span>
            </div>
            <p class="text-gray-600 mb-2">
              <span class="font-semibold">{categoryCount}</span> commandes
            </p>
            <p class="text-gray-600 mb-2">
              <span class="font-semibold">${Math.round(totalRevenue)}</span> revenus
            </p>
            <div class="flex items-center text-orange-600 font-semibold mt-4">
              <span>Voir les d√©tails</span>
              <svg 
                class="w-5 h-5 ml-2" 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                <path 
                  stroke-linecap="round" 
                  stroke-linejoin="round" 
                  stroke-width="2" 
                  d="M9 5l7 7-7 7"
                />
              </svg>
            </div>
          </a>
        );
      })}
    </div>

  
    <div class="mt-12 bg-gradient-to-r from-orange-50 to-red-50 rounded-lg p-8">
      <h2 class="text-2xl font-bold mb-6 text-gray-800">Statistiques globales</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <p class="text-sm text-gray-600 mb-1">Total de commandes</p>
          <p class="text-4xl font-bold text-orange-600">{pizza.length}</p>
        </div>
        <div>
          <p class="text-sm text-gray-600 mb-1">Cat√©gories diff√©rentes</p>
          <p class="text-4xl font-bold text-red-600">{categories.length}</p>
        </div>
        <div>
          <p class="text-sm text-gray-600 mb-1">Revenus totaux</p>
          <p class="text-4xl font-bold text-amber-600">
            ${Math.round(pizza.reduce((sum, p) => sum + p.revenue, 0)).toLocaleString()}
          </p>
        </div>
      </div>
    </div>

    
    <div class="mt-8 p-6 bg-gray-50 rounded-lg border-2 border-gray-200">
      <h3 class="text-lg font-semibold text-gray-700 mb-3">
        ‚ÑπÔ∏è Comment fonctionne le rendu dynamique ?
      </h3>
      <ul class="space-y-2 text-gray-700">
        <li class="flex items-start">
          <span class="text-orange-600 mr-2">‚ö°</span>
          <span>Les pages sont g√©n√©r√©es √† <strong>chaque requ√™te</strong> (SSR)</span>
        </li>
        <li class="flex items-start">
          <span class="text-orange-600 mr-2">‚ö°</span>
          <span><code class="bg-gray-200 px-2 py-1 rounded text-sm">prerender = false</code> active le mode dynamique</span>
        </li>
        <li class="flex items-start">
          <span class="text-orange-600 mr-2">‚ö°</span>
          <span>Id√©al pour des donn√©es qui changent fr√©quemment</span>
        </li>
      </ul>
  </div>
</Layout>
