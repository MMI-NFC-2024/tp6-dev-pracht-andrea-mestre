---
import Layout from "../../layouts/Layout.astro";
import PlotFigure from "../../components/PlotFigure.astro";
import * as Plot from "@observablehq/plot";
import pizza from "../../assets/pizza.json";
export function getStaticPaths() {
  const categories = [...new Set(pizza.map((p) => p.category))].sort();
  
  return categories.map((c) => ({
    params: { type: c },
  }));
}

const { type } = Astro.params;
const categoryData = pizza.filter((p) => p.category === type);

const totalRevenue = categoryData.reduce((sum, p) => sum + p.revenue, 0);
const avgPrice = categoryData.reduce((sum, p) => sum + p.price, 0) / categoryData.length;
---

<Layout>
  <a
    href="/pizza-statique"
    class="inline-flex items-center text-green-600 hover:text-green-800 mb-6 font-semibold"
  >
    ← Retour à la liste
    </a>

    <div class="mb-8">
      <h1 class="text-4xl font-bold mb-2 text-gray-900">{type}</h1>
      <p class="text-xl text-gray-600">
        Analyse de {categoryData.length} commandes
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
      <div class="bg-green-50 rounded-lg p-4">
        <h3 class="text-sm font-semibold text-gray-600 mb-1">
          Commandes
        </h3>
        <p class="text-3xl font-bold text-green-600">
          {categoryData.length}
        </p>
      </div>
      <div class="bg-teal-50 rounded-lg p-4">
        <h3 class="text-sm font-semibold text-gray-600 mb-1">
          Revenus totaux
        </h3>
        <p class="text-3xl font-bold text-teal-600">
          ${Math.round(totalRevenue).toLocaleString()}
        </p>
      </div>
      <div class="bg-emerald-50 rounded-lg p-4">
        <h3 class="text-sm font-semibold text-gray-600 mb-1">
          Prix moyen
        </h3>
        <p class="text-3xl font-bold text-emerald-600">
          ${Math.round(avgPrice)}
        </p>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-lg p-6">
      <h2 class="text-2xl font-bold mb-4 text-gray-800">
        Prix vs Nombre de commandes
      </h2>
      <PlotFigure
        options={{
          marks: [
            Plot.dot(categoryData, {
              x: "price",
              y: "orders",
              fill: "category",
              r: 6,
              opacity: 0.7,
            }),
          ],
          marginLeft: 60,
          marginBottom: 40,
          grid: true,
          x: {
            label: "Prix ($)",
          },
          y: {
            label: "Nombre de commandes",
          },
        }}
      />
    </div>
    <div class="mt-8 bg-gray-50 rounded-lg p-6">
      <h2 class="text-2xl font-bold mb-4 text-gray-800">
        Pizzas populaires
      </h2>
      <div class="flex gap-3 flex-wrap">
        {[...new Set(categoryData.map(p => p.name))].slice(0, 5).map((pizzaName) => (
          <span class="bg-white px-4 py-2 rounded-full border-2 border-green-200 font-semibold text-green-700">
            {pizzaName.split(' ')[0]}
          </span>
        ))}
      </div>
    </div>
  </div>
</Layout>
